parameters:
  - name: full
    type: boolean
    default: false
  - name: apigee-prod-org-tests
    type: boolean
    default: false
variables:
  - group: status-endpoint
  - name: test-variables:
  - value:
    {% raw %}${{ if parameters.apigee-prod-org-tests }}:{% endraw %}
      # In order to run tests in prod you must supply the unique ID of an Apigee app
      # that has authorized access to your service proxy.
      - test-variables: |
          PROXY_NAME=$(FULLY_QUALIFIED_SERVICE_NAME) \
          SOURCE_COMMIT_ID=$(Build.SourceVersion) \
          APIGEE_ACCESS_TOKEN=$(secret.AccessToken) \
          APIGEE_APP_ID= \
          STATUS_ENDPOINT_API_KEY=$(STATUS_ENDPOINT_API_KEY) \
      - test-command: make test-prod
      - smoketest-command: make smoketest-prod
    {% raw %}- ${{ if not(parameters.apigee-prod-org-tests) }}:{% endraw %}
      - test-variables: |
          PROXY_NAME=$(FULLY_QUALIFIED_SERVICE_NAME) \
          SOURCE_COMMIT_ID=$(Build.SourceVersion) \
          APIGEE_ACCESS_TOKEN=$(secret.AccessToken) \
      - test-command: make test
      - smoketest-command: make smoketest

steps:
  - bash: |
      make install-python
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Setup pytests
    condition: always()

  {% raw %}- ${{ if parameters.full }}:{% endraw %}
    - bash: |
        $(test-variables)
        $(test-command)
      workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
      displayName: Run full test suite
    - task: PublishTestResults@2
      displayName: 'Publish test results'
      condition: always()
      inputs:
        testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/test-report.xml'
        failTaskOnFailedTests: true
  {% raw %}- ${{ if not(parameters.full) }}:{% endraw %}
    - bash: |
        $(test-variables)
        $(smoketest-command)
      workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
      displayName: Run smoketests
    - task: PublishTestResults@2
      displayName: 'Publish smoketest results'
      condition: always()
      inputs:
        testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/smoketest-report.xml'
        failTaskOnFailedTests: true
